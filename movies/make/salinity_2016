days = np.arange(1,91)

ds = xarray.open_dataset( loc )

passed = 0      # keeps track of drifters that exit in time
seconds = 0     # used for accessing salt at that time

for day in days:
    date_day = datetime.datetime.fromtimestamp(1462165200 + seconds).day
    date_month = datetime.datetime.fromtimestamp(1462165200 + seconds).month

    # if July 1 drifters have ended
    if (day > 59):
        # Close file passed+1
        passed += 1


    for hour in range(24):
        dt = datetime.datetime(2016, date_month, date_day, hour, 0, 1)
        ind = dt2oceanindex(dt)
        
        ### plot salinity
        fig = plt.figure(dpi=300)
        fig.tight_layout()   

        ax = fig.add_subplot(111, projection=ccrs.Mercator())
        tracpy.plotting.background(grid, ax=ax, fig=fig, extent=[-98, -87.5, 22.8, 30.5],
                                   col='grey', halpha=0.1, outline=[1, 1, 0, 1], res='10m',
                                   fontsize=8,proj=ccrs.Mercator())

        ax.add_feature(cfeature.NaturalEarthFeature(category='physical', name='rivers_lake_centerlines',scale='10m', edgecolor='navy', facecolor='none', linewidths=0.3))
        ax.add_feature(cfeature.NaturalEarthFeature('physical', 'rivers_north_america', '10m', edgecolor='navy', facecolor='none', linewidths=0.3))

                                   
#         levels = (37-np.exp(np.linspace(0,np.log(37.), 10)))[::-1] # log for salinity, 0 to 36
#         cmap = calc_cmap(cmo.cm.haline)

        mp = ax.pcolormesh( ds["lon_rho"][:, :], ds["lat_rho"][:, :], ds["salt"][ind, 29, :, :], transform=ccrs.PlateCarree(),
                           norm=colors.PowerNorm(gamma=2), alpha=1, cmap=cmo.cm.haline, vmax=38, vmin=0)
    

        cax = fig.add_axes([0.38, 0.25, 0.415, 0.025]) #colorbar axes
        
        cb = fig.colorbar(mp, cax=cax, orientation='horizontal')
        cb.ax.set_xticks( np.linspace(0, 35, 8) )
        cb.ax.set_xticklabels( ["0", "", "10","15","20","25","30","35"], fontsize=7 )
        cb.ax.tick_params(labelsize=10, length=0, color='0.2', labelcolor='0.2')
        cb.set_label(r'Salinity $[g \cdot kg^{-1}]$')
        
        string = "2016 %s %.02d %.02d:00" %(dt.strftime("%B")[:3], date_day, hour)
        ax.text(-93.93,25.2, string,
               fontsize=12, color='0.2', transform=ccrs.PlateCarree())
        
        # print all drifters that are alive
        for drifter in range(passed+1, min(day+1, 32)):
            fname = "tracks/2016/2d_July%d.nc" %(drifter)
            dd = xarray.open_dataset( fname )
            idrift = ((day-drifter) * 24 +1 ) + (hour)
            ax.scatter( dd["lonp"][:,-idrift], dd["latp"][:,-idrift], marker="o",
                       edgecolors="black", facecolors="white", s=12, linewidths=0.7, transform=ccrs.PlateCarree() )
            
#         fig.savefig("figures/test%s_%.02d_%.02d:00.png" %( (day*24) + hour - 24 ))
#         plt.close(fig)
#         print( (day*24) + hour - 24 )

        
    seconds += 24*3600
    
    print()